{
	"name": "cfn-resource-actions",
	"displayName": "CloudFormation Resource Actions",
	"description": "Integrate with deployed resources directly from your CloudFormation template",
	"version": "0.0.35",
	"publisher": "ljacobsson",
	"engines": {
		"vscode": "^1.46.0"
	},
	"categories": [
		"Other"
	],
	"icon": "images/icon.png",
	"keywords": [
		"CloudFormation"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/mhlabs/cfn-resource-actions.git"
	},
	"activationEvents": [
		"onCommand:cfn-resource-actions.enable",
		"workspaceContains:**/serverless.template",
		"workspaceContains:**/template.yml",
		"workspaceContains:**/template.yaml",
		"workspaceContains:**/template.json"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "cfn-resource-actions.enable",
				"title": "CloudFormation Resource Actions: Toggle"
			},
			{
				"command": "cfn-resource-actions.awsProfile",
				"title": "CloudFormation Resource Actions: AWS Profile"
			},
			{
				"command": "cfn-resource-actions.uploadLambdaCode",
				"title": "CloudFormation Resource Actions: Upload Lambda code"
			}
		],
		"configuration": {
			"title": "CloudFormation Resource Actions",
			"properties": {
				"cfn-resource-actions.stackNameIsSameAsWorkspaceFolderName": {
					"type": "boolean",
					"default": false,
					"description": "Select if you use a naming convention where your stack name is the same as your workspace folder name"
				},
				"cfn-resource-actions.stackName": {
					"type": "string",
					"default": null,
					"description": "The name of the deployed stack that you want to map your template with. (Should be set in workspace settings)"
				},
				"cfn-resource-actions.enable": {
					"type": "boolean",
					"default": false,
					"description": "Enable or disable this feature"
				},
				"cfn-resource-actions.refreshRate": {
					"type": "number",
					"default": 60,
					"description": "The rate at which the extension should poll CloudFormation to fetch the stack's latest state (seconds)"
				},
				"cfn-resource-actions.AWSProfile": {
					"type": "string",
					"default": "default",
					"description": "The AWS profile to use"
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint src --ext ts",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.1",
		"@types/ini": "^1.3.30",
		"@types/mkdirp": "^1.0.1",
		"@types/mocha": "^7.0.2",
		"@types/node": "^13.11.0",
		"@types/vscode": "^1.46.0",
		"@typescript-eslint/eslint-plugin": "^2.30.0",
		"@typescript-eslint/parser": "^2.30.0",
		"eslint": "^6.8.0",
		"glob": "^7.1.6",
		"mocha": "^7.1.2",
		"typescript": "^3.8.3",
		"vscode-test": "^1.3.0"
	},
	"dependencies": {
		"@aws-sdk/shared-ini-file-loader": "0.1.0-preview.1",
		"@mhlabs/aws-sdk-sso": "0.0.12",
		"@mhlabs/cfn-diagram": "^1.0.10",
		"@mhlabs/cwlogs-cli": "^1.0.2",
		"@mhlabs/evb-cli": "^1.1.10",
		"@types/opn": "^5.5.0",
		"aws-sdk": "^2.742.0",
		"clipboardy": "^2.3.0",
		"ini": "^1.3.5",
		"mkdirp": "^1.0.4",
		"opn": "^6.0.0",
		"temp-dir": "^2.0.0",
		"yaml-cfn": "^0.2.3",
		"zip-a-folder": "0.0.12"
	}
}
